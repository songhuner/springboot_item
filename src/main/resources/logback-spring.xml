<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">
    <!--注意：若需要用 spring 扩展 profile 支持，则文件名应为 logback-spring.xml，而不是 logback.xml。-->
    <springProperty scope="context" name="logging.path" source="logging.filepath"/>
    <springProperty scope="context" name="logging.level" source="logging.level.com.hang"/>
    <springProperty scope="context" name="spring.application.name" source="spring.application.name"/>

    <!--1.输出到控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %thread %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--2.输出到文档-->
    <!--2.1 自定义级别日志-->
    <!--2.1.1 错误级别 以“天”为单位生成各日志文件  -->
    <appender name="ERROR-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <!-- 过滤器，只记录 error 级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 日志名称 -->
        <file>${logging.path}/${spring.application.name}/common-error.log</file>
        <!-- 每天生成一个日志文件，保存 14 天的日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名：按天回滚 -->
            <FileNamePattern>${logging.path}/${spring.application.name}/common-error.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxFileSize>100MB</MaxFileSize>
            <!--日志文件保留天数-->
            <MaxHistory>14</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d 表示日期，[%customLogFields]自定义日志输出字段信息，
            %thread 表示线程名，%-5level：级别从左显示 5 个字符宽度 %msg：日志消息，%n 是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %thread %-5level %logger{50} - %msg%n</pattern>
            <!-- 编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--2.1.2自定义级别日志-->
    <appender name="ROOT_FILE_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志名称 -->
        <file>${logging.path}/${spring.application.name}/common-default.log</file>
        <!--追加方式记录日志-->
        <append>true</append>
        <!-- 过滤器，此文档只记录 ${logging.level} 级别的日志 -->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>${logging.level}</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->

        <!--日志记录器的滚动策略:按日期,大小记录-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名：按天回滚 每天生成一个日志文件-->
            <FileNamePattern>${logging.path}/${spring.application.name}/common-default.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--按100m分割大小-->
            <maxFileSize>100MB</maxFileSize>
            <!--日志文件保留天数-->
            <MaxHistory>14</MaxHistory>
        </rollingPolicy>

        <!--日志输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d 表示日期，%thread 表示线程名，%-5level：级别从左显示5个字符宽度 ，%X{SOFA-TraceId},%X{SOFA-SpanId}：TraceId和SpanId，
                %customLogFields：标识服务信息，%responseFields：返回码，%busElementLogFields：业务要素，%msg：日志消息，%n 是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %thread %-5level  %logger{50} - %msg%n</pattern>
            <!-- 编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 屏蔽 以 org.dozer 开头的日志-->
    <logger name="org.dozer" level="OFF"></logger>
    <logger name="org.apache.http" level="OFF"></logger>
    <logger name="org.springframework.core.env" level="OFF"></logger>

    <!--控制台和日志文件输出级别-->
    <root level="${logging.level}">
        <!--上线注释掉控制台打印-->
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ERROR-APPENDER" />
        <appender-ref ref="ROOT_FILE_APPENDER"/>
    </root>
</configuration>